name: .NET Deploy to IIS

on: 
  push:
    branches:
      - "passion-release"

env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

jobs:
  build-and-deploy:

    runs-on: self-hosted
    
    steps:
      - uses: actions/checkout@v2

      # - name: Setup .NET Core
      # - name: Setup .NET Core
      #   uses: actions/setup-dotnet@v1
      #   with:
      #     dotnet-version: 5.0.1

      - name: setup-msbuild
        uses: microsoft/setup-msbuild@v1

      - name: Setup Nuget.exe for use with actions
        uses: Nuget/Setup-nuget@v1.0.5

      - name: Restore Nuget Packages
        run: nuget restore Rock.sln

      - name: Build Solution
        run: |
          dir env:
          $env:GITHUB_WORKSPACE
          $env:DevEnvDir = 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Current\'
          msbuild Rock /p:Configuration=Release /p:OutputPath=C:\actions-runner\_work\rock\rock\RockWeb\Bin /t:Rebuild,Build,Clean

      - name: Upload archive
        run: |
          # List env vars
          dir env:
          Compress-Archive -Path $env:GITHUB_WORKSPACE\RockWeb\* -DestinationPath C:\builds\rockweb.zip -Force
          aws s3 cp C:\builds\rockweb.zip s3://connect-deployments

      # - name: Deploy website archive`
      #   run: |
      #     aws autoscaling start-instance-refresh --auto-scaling-group-name "test-connect-asg"

    # - name: Setup Nuget.exe for us`e with actions
    #   uses: Nuget/Setup-nuget@v1.0.2

    # - name: Add dependencies for ASP.NET
    #   run: |
    #     wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
    #     sudo dpkg -i packages-microsoft-prod.deb
    #     sudo apt-get update; sudo apt-get install -y apt-transport-https && sudo apt-get update && sudo apt-get install -y dotnet-sdk-5.0

    # - name: Install dependencies
    #   run: dotnet restore

    # - name: Build with dotnet
    #   run: |
    #     dotnet build --configuration Release Rock

    # - name: dotnet publish 
    #   run: |
    #     dotnet publish -c Release -o dotnetwebapp .\dotnet-webapp
    # - name: Deploy to IIS
    #   run: |
    #     iisreset /stop
    #     Copy-Item ./dotnetwebapp/* C:/inetpub/wwwroot/dotnet-webapp -Recurse -Force
    #     iisreset /start
    
    # - name: Curl the website as a smoke test
    #   run: curl http://localhost/dotnet-webapp

    # - name: Run Web Test
    #   run: |
    #     dotnet build --configuration Release .\dotnet-webapp.webtest
    #     cd .\dotnet-webapp.webtests
    #     dotnet test